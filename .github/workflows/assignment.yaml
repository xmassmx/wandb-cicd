name: assignment
on: issue_comment

permissions:
  issues: write
  pull-requests: write

jobs:
  ghapi-exercise:
    if: (github.event.issue.pull_request != null) && contains(github.event.comment.body, '/wandb')
    runs-on: ubuntu-latest
    steps:        
    - name: install dependencies
      run: pip install ghapi wandb
      
    - name: 1. Parsing RUN-ID
      id: set-id
      shell: python
      run: |
        import os
        run_id = os.environ['COMMENT'].split( )[1]
        if run_id:
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              print(f'RUN_ID={run_id}', file=f)
      env: 
        COMMENT: ${{ github.event.comment.body }}
      
    - name: 2. Report Generation  
      id: report-gen
      shell: python
      run: |
          import wandb
          import os
          import wandb.apis.reports as wr
          PROJECT = 'cicd-quickstart'
          ENTITY = 'massm'
          api = wandb.Api()
          tags= ['baseline']
          
          baseline_runs=api.runs(f'{ENTITY}/{PROJECT}', 
                                 {"tags": {"$in": tags}}) 
          print(baseline_runs[0].id)
          print(f"'${{ steps.set-id.outputs.RUN_ID }}'")
          if f'{${{ steps.set-id.outputs.RUN_ID }}}' == baseline_runs[0].id:
            with open(os.environ['GITHUB_OUTPUT'], 'a') as f: 
              print(f'URL=same', file=f)
          else:
            report = wr.Report(
                entity=ENTITY,
                project=PROJECT,
                title='Compare Runs',
                description="A demo of comparing runs programatically"
            )  
            pg = wr.PanelGrid(
              runsets=[
                  wr.Runset(ENTITY, PROJECT, "Run Comparison").set_filters_with_python_expr(f"ID in ['${{ steps.set-id.outputs.RUN_ID }}', '{baseline_runs[0].id}']")
              ],
              panels=[
                  wr.RunComparer(diff_only='split', layout={'w': 24, 'h': 15}),
              ]
            )
            report.blocks = report.blocks[:1] + [pg] + report.blocks[1:]
            report.save()
            
          
            with open(os.environ['GITHUB_OUTPUT'], 'a') as f: 
                print(f'URL={report.url}', file=f)

      env:
        WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}



    - name: 3. Comment on PR
      shell: python
      run: |
        import os
        from ghapi.core import GhApi
        owner,repo = os.environ['REPO'].split('/')
        api = GhApi(owner=owner, repo=repo)
        report_url = ${{ steps.report-gen.outputs.URL }}
        if report_url == 'same':
          api.issues.create_comment(issue_number=os.environ['NUMBER'], body = f" The run ID entered is for the baseline model")
        else:
          api.issues.create_comment(issue_number=os.environ['NUMBER'], body = f" The report can be found here {report_url}")
      env:
        NUMBER: ${{ github.event.issue.number }} 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: ${{ github.repository }}
      
